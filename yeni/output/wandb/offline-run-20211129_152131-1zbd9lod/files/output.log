
[32m2021-11-29 15:21:39.479[39m | [1mINFO[22m | [90m/home/avsp/Masa√ºst√º/GansNRoses/environment/level_utils.py:76[39m | Tokens in level ['-', 'X']
  0%|                                                                             | 0/15 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 93, in <module>
    main()
  File "main.py", line 75, in main
    generated_map = G.train(np.array(init_map), opt)
  File "/home/avsp/Masa√ºst√º/GansNRoses/train.py", line 71, in train
    output = self.D(real).to(opt.device)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/Masa√ºst√º/GansNRoses/models/discriminator.py", line 29, in forward
    x = self.body(x)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py", line 106, in forward
    exponential_average_factor, self.eps)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 1919, in batch_norm
    _verify_batch_size(input.size())
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 1902, in _verify_batch_size
    raise ValueError('Expected more than 1 value per channel when training, got input size {}'.format(size))
ValueError: Expected more than 1 value per channel when training, got input size torch.Size([1, 64, 1, 1])